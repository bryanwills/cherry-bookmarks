name: Deploy workflow
on: [push]
concurrency:
  group: push-${{ github.ref }}
  cancel-in-progress: true
jobs:
  install:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.2.1
        with:
          version: 7.1.0
          run_install: true

      - run: echo "- Setup :white_check_mark:" >> $GITHUB_STEP_SUMMARY
      - name: Lint
        run: pnpm lint
      - run: echo "- Lint :white_check_mark:" >> $GITHUB_STEP_SUMMARY
      - name: Build
        run: pnpm build
      - run: echo "- Build :white_check_mark:" >> $GITHUB_STEP_SUMMARY

      - name: Send Notification
        uses: haishanh/actions-telegram-notification@v1
        if: ${{ always() }}
        with:
          notification-token: ${{ secrets.TG_NOTIFICATION_TOKEN }}
          job-status: ${{ job.status }}
  docker:
    needs: install
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && (startsWith(github.event.ref, 'refs/tags/') || startsWith(github.event.ref, 'refs/heads/v') || github.event.ref == 'refs/heads/main')
    steps:
      - uses: actions/checkout@v3.0.0

      - name: Cache Docker layers
        uses: actions/cache@v2.1.7
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: cherry

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to r.haishan.me
        uses: docker/login-action@v2
        with:
          registry: r.haishan.me
          username: ${{ secrets.R_HAISHAN_ME_USERNAME }}
          password: ${{ secrets.R_HAISHAN_ME_PASSWORD }}

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1.14.1
      #   with:
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # - name: Login to GHCR
      #   uses: docker/login-action@v1.14.1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          # platforms: linux/amd64,linux/arm/v7,linux/arm64
          platforms: linux/amd64
          push: true
          tags: r.haishan.me/${{ steps.docker_meta.outputs.tags }}
          # tags: ${{ steps.docker_meta.outputs.tags }},ghcr.io/${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Send Notification
        uses: haishanh/actions-telegram-notification@v1
        if: ${{ always() }}
        with:
          notification-token: ${{ secrets.TG_NOTIFICATION_TOKEN }}
          job-status: ${{ job.status }}
